#!/bin/bash

#
# Run code embeded into MarkDown documents
#

shopt -s expand_aliases

alias say='echo 1>&2'

# $1 is a MarkDown document
declare -r PROGRAM=${1?Expected program filename}
declare -r CODE=/tmp/${PROGRAM%.md}
shift

# Extract code
declare -i onblock=0
declare line=''

IFS=''
while read -r line; do
    if [[ $line == '```'* ]]; then
        if (( onblock )); then
            onblock=0
        else
            onblock=1
        fi
        echo
    else
        if (( onblock )); then
            echo "$line"
        else
            echo
        fi
    fi
done < "$PROGRAM" > "$CODE"

declare -r RUNNING=">>> Running $PROGRAM; temporary files left at /tmp:"

case "$PROGRAM" in
    *.sh.md)
        say "$RUNNING ${PROGRAM%.md}"
        bash "$CODE" "$@"
        ;;
    *.py.md)
        say "$RUNNING ${PROGRAM%.md}"
        python "$CODE" "$@"
        ;;
    *.pl.md)
        say "$RUNNING ${PROGRAM%.md}"
        perl "$CODE" "$@"
        ;;
    *.c.md)
        say "$RUNNING ${PROGRAM%.md} and a.out"
        gcc "$CODE" -o /tmp/a.out && /tmp/a.out "$@"
        ;;
    *.cpp.md|*.cxx.md)
        say "$RUNNING ${PROGRAM%.md} and a.out"
        g++ "$CODE" -o /tmp/a.out && /tmp/a.out "$@"
        ;;
    *.java.md)
        say "$RUNNING ${PROGRAM%.md} and ${PROGRAM%.java.md}.class"
        javac -d /tmp "$CODE" && cd /tmp && java "${PROGRAM%.java.md}" "$@"
        ;;
    *)  # unsupported language: only expand
        cat "$CODE"
        ;;
esac

exit

# vim:ai:et:sw=4:ts=4:syntax=sh
